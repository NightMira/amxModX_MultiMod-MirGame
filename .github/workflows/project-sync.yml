name: Sync All to Project

on:
  workflow_dispatch:
    inputs:
      item_type:
        description: 'Type of items to sync'
        required: true
        default: 'both'
        type: choice
        options:
          - issues
          - prs
          - both

jobs:
  sync_project:
    runs-on: ubuntu-latest
    steps:
      - name: 📦 Setup GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y curl jq
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      - name: 🔑 Authenticate
        run: |
          echo "${{ secrets.PRIVATE_REPO_TOKEN }}" | gh auth login --with-token

      - name: 📊 Get project ID
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
        run: |
          PROJECT_ID=$(gh api graphql -f query='
            query($user: String!, $number: Int!) {
              user(login: $user) {
                projectV2(number: $number) {
                  id
                  title
                }
              }
            }' -f user="NightMira" -f number=3 --jq '.data.user.projectV2.id')
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV

      - name: 🔄 Sync items
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
        run: |
          echo "## 🔄 Project Sync" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.item_type }}" = "issues" ] || [ "${{ github.event.inputs.item_type }}" = "both" ]; then
            echo "📦 Syncing open issues..." >> $GITHUB_STEP_SUMMARY
            gh issue list --state open --limit 50 --json number,title,url | jq -c '.[]' | while read item; do
              number=$(echo "$item" | jq -r '.number')
              url=$(echo "$item" | jq -r '.url')
              gh project item-add 3 --user NightMira --url "$url" && echo "✅ Issue #$number" >> $GITHUB_STEP_SUMMARY || echo "⚠️ Issue #$number (may already exist)" >> $GITHUB_STEP_SUMMARY
            done
          fi
          
          if [ "${{ github.event.inputs.item_type }}" = "prs" ] || [ "${{ github.event.inputs.item_type }}" = "both" ]; then
            echo "📦 Syncing open PRs..." >> $GITHUB_STEP_SUMMARY
            gh pr list --state open --limit 50 --json number,title,url | jq -c '.[]' | while read item; do
              number=$(echo "$item" | jq -r '.number')
              url=$(echo "$item" | jq -r '.url')
              gh project item-add 3 --user NightMira --url "$url" && echo "✅ PR #$number" >> $GITHUB_STEP_SUMMARY || echo "⚠️ PR #$number (may already exist)" >> $GITHUB_STEP_SUMMARY
            done
          fi
          
          echo "✅ Sync completed!" >> $GITHUB_STEP_SUMMARY
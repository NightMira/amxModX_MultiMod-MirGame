name: Project Automation

on:
  issues:
    types: [opened, reopened, closed]
  pull_request:
    types: [opened, reopened, closed, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  project-automation:
    runs-on: ubuntu-latest
    steps:
      - name: üöÄ Checkout code (with private token)
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PRIVATE_REPO_TOKEN }}

      - name: üìã Add new items to project (Simple version)
        if: github.event_name == 'issues' && github.event.action == 'opened' || github.event_name == 'pull_request' && github.event.action == 'opened'
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
        run: |
          echo "üéØ Adding ${{ github.event_name }} to project..."
          
          if [ "${{ github.event_name }}" = "issues" ]; then
            ITEM_URL="https://github.com/NightMira/amxModX_MultiMod-MirGame/issues/${{ github.event.issue.number }}"
            echo "üìù Issue URL: $ITEM_URL"
          else
            ITEM_URL="https://github.com/NightMira/amxModX_MultiMod-MirGame/pull/${{ github.event.pull_request.number }}"
            echo "üìù PR URL: $ITEM_URL"
          fi
          
          # –ü—Ä–æ—Å—Ç–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–µ–∑ GraphQL
          echo "üèóÔ∏è Adding to project #3..."
          if gh project item-add 3 --owner NightMira --url "$ITEM_URL"; then
            echo "‚úÖ Added to project successfully!"
          else
            echo "‚ö†Ô∏è Failed to add to project. Checking token permissions..."
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ —Ç–æ–∫–µ–Ω–∞
            echo "üîç Testing token permissions for projects..."
            if gh project view 3 --owner NightMira >/dev/null 2>&1; then
              echo "‚úÖ Token can view project"
            else
              echo "‚ùå Token cannot access project"
              echo "‚ÑπÔ∏è Please ensure PAT has 'project' permissions"
            fi
          fi

      - name: üìã Alternative project addition via API
        if: always() && (github.event_name == 'issues' && github.event.action == 'opened' || github.event_name == 'pull_request' && github.event.action == 'opened')
        env:
          GH_TOKEN: ${{ secrets.PRIVATE_REPO_TOKEN }}
        run: |
          echo "üîÑ Trying alternative method..."
          
          # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —á–µ—Ä–µ–∑ REST API
          if [ "${{ github.event_name }}" = "issues" ]; then
            CONTENT_ID="${{ github.event.issue.node_id }}"
          else
            CONTENT_ID="${{ github.event.pull_request.node_id }}"
          fi
          
          # –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ API
          response=$(curl -s -w "%{http_code}" \
            -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/projects/columns/cards" \
            -d '{
              "content_id": "'$CONTENT_ID'",
              "content_type": "'${{ github.event_name }}'"
            }' 2>/dev/null)
          
          http_code=$(echo "$response" | tail -n1)
          if [ "$http_code" = "201" ]; then
            echo "‚úÖ Added to project via API"
          else
            echo "‚ùå API call failed with HTTP $http_code"
            echo "‚ö†Ô∏è Project automation requires additional permissions"
          fi
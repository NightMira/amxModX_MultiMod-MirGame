name: Auto Label Issues and PRs

on:
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited, synchronize]

jobs:
  auto-label:
    runs-on: ubuntu-latest
    steps:
      - name: üè∑Ô∏è Auto-label issues and PRs
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            module.exports = async ({ github, context }) => {
              try {
                // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
                const issueData = context.payload.issue;
                const prData = context.payload.pull_request;
                
                if (!issueData && !prData) {
                  console.log('‚ùå No issue or PR data found');
                  return;
                }

                const target = issueData || prData;
                const { title, body, number, labels = [] } = target;
                const type = issueData ? 'issue' : 'pull_request';

                if (!title) {
                  console.log(`‚ö†Ô∏è No title found for ${type} #${number}`);
                  return;
                }

                console.log(`üìã Processing ${type}: "${title}" (#${number})`);

                const content = `${title} ${body || ''}`.toLowerCase();
                const newLabels = new Set(labels.map(label => label.name));

                // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Ç–æ–∫
                const rules = [
                  { keywords: ['bug', '–æ—à–∏–±–∫–∞', 'fix', '–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ'], label: 'bug' },
                  { keywords: ['feature', '—Ñ—É–Ω–∫—Ü–∏—è', '—É–ª—É—á—à–µ–Ω–∏–µ', '–Ω–æ–≤–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å'], label: 'enhancement' },
                  { keywords: ['doc', 'documentation', '–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è'], label: 'documentation' },
                  { keywords: ['urgent', '—Å—Ä–æ—á–Ω–æ', 'critical', '–∫—Ä–∏—Ç–∏—á–Ω–æ'], label: 'priority-high' },
                  { keywords: ['question', '–≤–æ–ø—Ä–æ—Å', 'help', '–ø–æ–º–æ—â—å'], label: 'question' },
                  { keywords: ['refactor', '—Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥'], label: 'refactor' }
                ];

                rules.forEach(rule => {
                  if (rule.keywords.some(keyword => content.includes(keyword))) {
                    newLabels.add(rule.label);
                  }
                });

                // –î–ª—è PR –¥–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä
                if (prData) {
                  const { additions, deletions } = prData;
                  const totalChanges = additions + deletions;
                  
                  if (totalChanges > 150) newLabels.add('size-large');
                  else if (totalChanges > 50) newLabels.add('size-medium');
                  else if (totalChanges > 0) newLabels.add('size-small');
                }

                // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–∫–∏ —Ä–∞–∑–º–µ—Ä–∞ –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é
                if (newLabels.has('size-large') || newLabels.has('size-medium') || newLabels.has('size-small')) {
                  newLabels.delete('size-large');
                  newLabels.delete('size-medium'); 
                  newLabels.delete('size-small');
                  
                  if (totalChanges > 150) newLabels.add('size-large');
                  else if (totalChanges > 50) newLabels.add('size-medium');
                  else newLabels.add('size-small');
                }

                const labelsToAdd = Array.from(newLabels);

                if (labelsToAdd.length > 0) {
                  console.log(`üè∑Ô∏è Setting labels: ${labelsToAdd.join(', ')}`);
                  
                  await github.rest.issues.setLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: number,
                    labels: labelsToAdd
                  });
                  
                  console.log('‚úÖ Labels updated successfully');
                } else {
                  console.log('‚ÑπÔ∏è No labels to add');
                }

              } catch (error) {
                console.error('üí• Error in auto-label workflow:', error.message);
                // –ù–µ –ø—Ä–æ–≤–∞–ª–∏–≤–∞–µ–º –≤–µ—Å—å workflow –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –º–µ—Ç–æ–∫
              }
            }